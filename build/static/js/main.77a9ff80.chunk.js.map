{"version":3,"sources":["containers/Home.js","actions/auth.js","actions/types.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["home","className","to","role","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","Accept","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","style","textAlign","initialValues","remember","onFinish","Item","label","rules","required","message","prefix","UserOutlined","placeholder","Password","LockOutlined","minLength","valuePropName","noStyle","htmlType","signup","re_password","accountCreated","setAccountCreated","hasFeedback","getFieldValue","validator","rule","Promise","reject","resolve","verify","uid","token","props","verified","setVerified","display","justifyContent","alignItems","flexDirection","marginTop","onClick","match","params","reset_password","requestSent","setRequestSent","onSubmit","preventDefault","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","authLinks","href","guestLinks","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Content","Layout","Footer","checkAuthenticated","window","code","useEffect","fetchData","Navbar","padding","margin","children","App","path","component","Home","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77a9ff80.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst home = () => (\n    <div className='container'>\n        <div className=\"jumbotron mt-5\">\n            <h1 className=\"display-4\">Welcome to Auth System!</h1>\n            <p className=\"lead\">This is a super cool authentication system with all kinds of functionalities.</p>\n            <hr className=\"my-4\" />\n            <p>Go ahead and login!</p>\n            <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Login</Link>\n        </div>\n    </div>\n);\n\nexport default home;\n","import axios from \"axios\";\nimport {\n\tSIGNUP_SUCCESS,\n\tSIGNUP_FAIL,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tACTIVATION_SUCCESS,\n\tACTIVATION_FAIL,\n\tRESET_PASSWORD_SUCCESS,\n\tRESET_PASSWORD_FAIL,\n\tRESET_PASSWORD_CONFIRM_SUCCESS,\n\tRESET_PASSWORD_CONFIRM_FAIL,\n\tLOGOUT,\n\tUSER_LOADED_SUCCESS,\n\tUSER_LOADED_FAIL,\n\tAUTHENTICATED_FAIL,\n\tAUTHENTICATED_SUCCESS,\n} from \"./types\";\n\n// check Authenticated\nexport const checkAuthenticated = () => async (dispatch) => {\n\tif (typeof window == \"undefined\") {\n\t\tdispatch({\n\t\t\ttype: AUTHENTICATED_FAIL,\n\t\t});\n\t}\n\tif (localStorage.getItem(\"access\")) {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n\t\ttry {\n\t\t\tconst res = await axios.post(\n\t\t\t\t`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n\t\t\t\tbody,\n\t\t\t\tconfig\n\t\t\t);\n\n\t\t\tif (res.data.code !== \"token_not_valid\") {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AUTHENTICATED_SUCCESS,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AUTHENTICATED_FAIL,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: AUTHENTICATED_FAIL,\n\t\t\t});\n\t\t}\n\t} else {\n\t\tdispatch({\n\t\t\ttype: AUTHENTICATED_FAIL,\n\t\t});\n\t}\n};\n\n// load user\n\nexport const load_user = () => async (dispatch) => {\n\tif (localStorage.getItem(\"access\")) {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: `JWT ${localStorage.getItem(\"access\")}`,\n\t\t\t\tAccept: \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tconst res = await axios.get(\n\t\t\t\t`${process.env.REACT_APP_API_URL}/auth/users/me/`,\n\t\t\t\tconfig\n\t\t\t);\n\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED_FAIL,\n\t\t\t});\n\t\t}\n\t} else {\n\t\tdispatch({\n\t\t\ttype: USER_LOADED_FAIL,\n\t\t});\n\t}\n};\n\n// login\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ email, password });\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: LOGIN_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(load_user());\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: LOGIN_FAIL,\n\t\t});\n\t}\n};\n\n// signup\n\nexport const signup = ({ name, email, password, re_password }) => async (\n\tdispatch\n) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ name, email, password, re_password });\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/auth/users/`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: SIGNUP_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: SIGNUP_FAIL,\n\t\t});\n\t}\n};\n\n// activation\n\nexport const verify = (uid, token) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ uid, token });\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: ACTIVATION_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: ACTIVATION_FAIL,\n\t\t});\n\t}\n};\n\n// reset password\n\nexport const reset_password = (email) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ email });\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: RESET_PASSWORD_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: RESET_PASSWORD_FAIL,\n\t\t});\n\t}\n};\n\nexport const reset_password_confirm = (\n\tuid,\n\ttoken,\n\tnew_password,\n\tre_new_password\n) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: RESET_PASSWORD_CONFIRM_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: RESET_PASSWORD_CONFIRM_FAIL,\n\t\t});\n\t}\n};\n\n// logout\n\nexport const logout = () => (dispatch) => {\n\tdispatch({ type: LOGOUT });\n};\n","// sign Up\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// login \nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n// activation\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// reset pasword\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\n// log out\nexport const LOGOUT = 'LOGOUT';\n// authentication\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// load user\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./login.css\";\n\nconst Login = ({ login, isAuthenticated }) => {\n\tconst [formData, setFormData] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { email, password } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst onFinish = (e) => {\n\t\tlogin(email, password);\n\t};\n\n\tif (isAuthenticated) return <Redirect to=\"/\" />;\n\n\treturn (\n\t\t<Form\n\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\tname=\"normal_login\"\n\t\t\tclassName=\"login-form\"\n\t\t\tinitialValues={{ remember: true }}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<h1>Sign In</h1>\n\t\t\t<p>Sign into your Account</p>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"E-mail\"\n\t\t\t\trules={[{ required: true, message: \"Please input your Username!\" }]}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Password\"\n\t\t\t\trules={[{ required: true, message: \"Please input your Password!\" }]}\n\t\t\t>\n\t\t\t\t<Input.Password\n\t\t\t\t\tprefix={<LockOutlined className=\"site-form-item-icon\" />}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\t<Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n\t\t\t\t\t<Checkbox>Remember me</Checkbox>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Link to=\"/reset_password\">Reset Password</Link>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n\t\t\t\t\tLog in\n\t\t\t\t</Button>\n\t\t\t\tOr <Link to=\"/signup\">Sign Up</Link>\n\t\t\t</Form.Item>\n\t\t</Form>\n\n\t\t// <div className='container mt-5'>\n\t\t//     <h1>Sign In</h1>\n\t\t//     <p>Sign into your Account</p>\n\t\t//     <form onSubmit={e => onSubmit(e)}>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='email'\n\t\t//                 placeholder='Email'\n\t\t//                 name='email'\n\t\t//                 value={email}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='password'\n\t\t//                 placeholder='Password'\n\t\t//                 name='password'\n\t\t//                 value={password}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 minLength='6'\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <button className='btn btn-primary' type='submit'>Login</button>\n\t\t//     </form>\n\t\t//     <p className='mt-3'>\n\t\t//     Don't have an account? <Link to='/signup'>Sign Up</Link>\n\t\t//     </p>\n\t\t//     <p className='mt-3'>\n\t\t//     Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\n\t\t//     </p>\n\t\t// </div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signup } from \"../actions/auth\";\nimport { Form, Input, Button} from \"antd\";\n\nconst Signup = ({ signup, isAuthenticated }) => {\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tre_password: \"\",\n\t});\n\n\tconst [accountCreated, setAccountCreated] = useState(false);\n\n\tconst { name, email, password, re_password } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (password === re_password) {\n\t\t\tsignup({ name, email, password, re_password });\n\t\t\tsetAccountCreated(true);\n\t\t}\n\t};\n\tconst onFinish = (e) => {\n\t\tif (password === re_password) {\n\t\t\tsignup({ name, email, password, re_password });\n\t\t\tsetAccountCreated(true);\n\t\t}\n\t};\n\tif (isAuthenticated) return <Redirect to=\"/\" />;\n\tif (accountCreated) return <Redirect to=\"login\" />;\n\n\treturn (\n\t\t<Form\n\t\t\tname=\"normal_login\"\n\t\t\tclassName=\"login-form\"\n\t\t\tinitialValues={{ remember: true }}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t<p>Create your Account</p>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Full Name\"\n\t\t\t\trules={[{ required: true, message: \"Please input your Name!\" }]}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\t\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Name*\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"E-mail\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"email\",\n\t\t\t\t\t\tmessage: \"The input is not valid E-mail!\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input your E-mail!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Password\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input your password!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\thasFeedback\n\t\t\t>\n\t\t\t\t<Input.Password\n\t\t\t\t\t\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\thasFeedback\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please confirm your password!\",\n\t\t\t\t\t},\n\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\tvalidator(rule, value) {\n\t\t\t\t\t\t\tif (!value || getFieldValue(\"password\") === value) {\n\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\t\t\t\"The two passwords that you entered do not match!\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input.Password\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\tname=\"re_password\"\n\t\t\t\t\tvalue={re_password}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\tAlready have an account? <Link to=\"/login\">Sign In</Link>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n\t\t\t\t\tLog in\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t\t// <div className='container mt-5'>\n\t\t//     <h1>Sign Up</h1>\n\t\t//     <p>Create your Account</p>\n\t\t//     <form onSubmit={e => onSubmit(e)}>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='text'\n\t\t//                 placeholder='Name*'\n\t\t//                 name='name'\n\t\t//                 value={name}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='email'\n\t\t//                 placeholder='Email*'\n\t\t//                 name='email'\n\t\t//                 value={email}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='password'\n\t\t//                 placeholder='Password*'\n\t\t//                 name='password'\n\t\t//                 value={password}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 minLength='6'\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <div className='form-group'>\n\t\t//             <input\n\t\t//                 className='form-control'\n\t\t//                 type='password'\n\t\t//                 placeholder='Confirm Password*'\n\t\t//                 name='re_password'\n\t\t//                 value={re_password}\n\t\t//                 onChange={e => onChange(e)}\n\t\t//                 minLength='6'\n\t\t//                 required\n\t\t//             />\n\t\t//         </div>\n\t\t//         <button className='btn btn-primary' type='submit'>Register</button>\n\t\t//     </form>\n\t\t//     <p className='mt-3'>\n\t\t//         Already have an account? <Link to='/login'>Sign In</Link>\n\t\t//     </p>\n\t\t// </div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = (props) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = props.match.params.uid;\n        const token = props.match.params.token;\n\n        props.verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified)\n        return <Redirect to='/' />\n    return (\n        <div className='container'>\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column',marginTop: '200px' }}>\n                <h1>Verify your Account:</h1>\n                <button \n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = (props) => {\n    const [requestSent, setRequestSent] = useState(false);\n\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        props.reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent)\n        return <Redirect to='/' />\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input \n                        className='form-control'\n                        type='email'\n                        placeholder='Your Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = (props) => {\n    const [requestSent, setRequestSent] = useState(false);\n\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        \n        const uid = props.match.params.uid;\n        const token = props.match.params.token;\n\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent)\n        return <Redirect to='/' />\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input \n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\n","import {\n\tSIGNUP_SUCCESS,\n\tSIGNUP_FAIL,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT,\n\tRESET_PASSWORD_SUCCESS,\n\tRESET_PASSWORD_FAIL,\n\tRESET_PASSWORD_CONFIRM_SUCCESS,\n\tRESET_PASSWORD_CONFIRM_FAIL,\n\tAUTHENTICATED_FAIL,\n\tAUTHENTICATED_SUCCESS,\n\tUSER_LOADED_SUCCESS,\n\tUSER_LOADED_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n\taccess: localStorage.getItem(\"access\"),\n\trefresh: localStorage.getItem(\"refresh\"),\n\tisAuthenticated: null,\n\tuser: null,\n};\n\nexport default function (state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase AUTHENTICATED_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t};\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem(\"access\", payload.access);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\taccess: payload.access,\n\t\t\t\trefresh: payload.refresh,\n\t\t\t};\n\t\tcase USER_LOADED_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: payload,\n\t\t\t};\n\t\tcase SIGNUP_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t};\n\t\tcase AUTHENTICATED_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t};\n\t\tcase USER_LOADED_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: null,\n\t\t\t};\n\t\tcase SIGNUP_FAIL:\n\t\tcase LOGIN_FAIL:\n\t\tcase LOGOUT:\n\t\t\tlocalStorage.removeItem(\"access\");\n\t\t\tlocalStorage.removeItem(\"refresh\");\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccess: null,\n\t\t\t\trefresh: null,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tuser: null,\n\t\t\t};\n\t\tcase RESET_PASSWORD_SUCCESS:\n\t\tcase RESET_PASSWORD_FAIL:\n\t\tcase RESET_PASSWORD_CONFIRM_SUCCESS:\n\t\tcase RESET_PASSWORD_CONFIRM_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../actions/auth\";\n\nconst navbar = ({ isAuthenticated, logout }) => {\n\tconst authLinks = (\n\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" onClick={logout} href=\"#!\">\n\t\t\t\tLogout\n\t\t\t</a>\n\t\t</li>\n\t);\n\n\tconst guestLinks = (\n\t\t<Fragment>\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/login\">\n\t\t\t\t\tLogin\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/signup\">\n\t\t\t\t\tSign Up\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t\t<Link className=\"navbar-brand\" to=\"/\">\n\t\t\t\tAuth System\n\t\t\t</Link>\n\t\t\t<button\n\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\tdata-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\"\n\t\t\t\taria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t>\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t</button>\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t\t{<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { logout })(navbar);\n\n/* <Header>\n\t<div className=\"logo\" />\n\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\n\t\t<Menu.Item key=\"1\">nav 1</Menu.Item>\n\t\t<Menu.Item key=\"2\">nav 2</Menu.Item>\n\t\t<Menu.Item key=\"3\">nav 3</Menu.Item>\n\t</Menu>\n</Header> */\n","import React, { useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport { connect } from \"react-redux\";\nimport \"./Layout.css\";\n\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\n\nimport { Layout, Breadcrumb } from \"antd\";\n\nconst { Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tawait props.checkAuthenticated();\n\t\t\t\tawait props.load_user();\n\t\t\t} catch (err) {}\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\">\n\t\t\t<Navbar />\n\t\t\t<Content style={{ padding: \"0 50px\" }}>\n\t\t\t\t<Breadcrumb style={{ margin: \"16px 0\" }}>\n\t\t\t\t\t<Breadcrumb.Item>Home</Breadcrumb.Item>\n\t\t\t\t\t<Breadcrumb.Item>List</Breadcrumb.Item>\n\t\t\t\t</Breadcrumb>\n\t\t\t\t<div className=\"site-layout-content\">{props.children}</div>\n\t\t\t</Content>\n\t\t\t<Footer style={{ textAlign: \"center\" }}>Design By Alhassn</Footer>\n\t\t</Layout>\n\t);\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(CustomLayout);\n\n// <Layout className=\"layout\">\n// <Header>\n//     <div className=\"logo\" />\n//     <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\n//         <Menu.Item key=\"1\">nav 1</Menu.Item>\n//         <Menu.Item key=\"2\">nav 2</Menu.Item>\n//         <Menu.Item key=\"3\">nav 3</Menu.Item>\n//     </Menu>\n// </Header>\n// <Content style={{ padding: \"0 50px\" }}>\n//     <Breadcrumb style={{ margin: \"16px 0\" }}>\n//         <Breadcrumb.Item>Home</Breadcrumb.Item>\n//         <Breadcrumb.Item>List</Breadcrumb.Item>\n//         <Breadcrumb.Item>App</Breadcrumb.Item>\n//     </Breadcrumb>\n//     <div className=\"site-layout-content\">{props.children}</div>\n// </Content>\n// <Footer style={{ textAlign: \"center\" }}>Design By Alhassn</Footer>\n// </Layout>\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport CustomLayout from './hocs/Layout';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <CustomLayout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset_password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </CustomLayout>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}